
// Generated file
// DO NOT EDIT THIS FILE

#if os(macOS)
import QuartzCore

extension Modify.DynamicMemberWrap where T: CAOpenGLLayer {
    @discardableResult
    @_disfavoredOverload
    public func draw(inCGLContext ctx: OpenGL.CGLContextObj, pixelFormat pf: OpenGL.CGLPixelFormatObj, forLayerTime t: CoreFoundation.CFTimeInterval, displayTime ts: Swift.UnsafePointer<CoreVideo.CVTimeStamp>?) -> T {
        self.value.draw(inCGLContext: ctx, pixelFormat: pf, forLayerTime: t, displayTime: ts)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func releaseCGLPixelFormat(_ pf: OpenGL.CGLPixelFormatObj) -> T {
        self.value.releaseCGLPixelFormat(pf)
        return self.value
    }

    @discardableResult
    @_disfavoredOverload
    public func releaseCGLContext(_ ctx: OpenGL.CGLContextObj) -> T {
        self.value.releaseCGLContext(ctx)
        return self.value
    }
}

#endif
